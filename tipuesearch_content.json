{"pages":[{"url":"http://wonux.github.io/gentoo-arch-apps","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 ## Desktop Environment ### GNOME ### KDE ### LXDE ### Xfce ## Window Managers ### dwm [x11-wm/dwm] [dmenu] euse --enable savedconfig ln -s /etc/portage/savedconfig/x11-wm/dwm-6.1 /etc/portage/savedconfig/x11-wm/dwm-6.1.h ### Awesome ### openbox x11-wm/openbox [obconf] [obmenu] [tint2] [dmenu_run] .config/openbox/ autostart menu.xml rc.xml ## Taskbars/Panels ### lxpanel ### tint2 [tint2] [volumeicon] .config/tint2/tint2rc ### wbar ## Desktop Utilities ### File Managers #### vifm #### xfe #### dolphin #### thunar #### pcmanfm ### Clipboard Managers ### Terminal Emulators #### rxvt-unicode [x11-terms/rxvt-unicode] [xorg-xrdb] [x11-misc/xsel] [x11-misc/xclip] [x11-misc/urxvt-perls] .Xresources .xinitrc == [[ -f ~/.Xresources ]] && xrdb -merge ~/.Xresources urxvtd --quiet --opendisplay --fork == urxvtc #### tilda #### sakura #### xfce4-terminal #### konsole #### yakuake #### lxterminal ## Network Management ### dhcpcd ### wpa_supplicant ### networkmanager ### netctl ## Internet ### Email Clients ### P2P #### rtorrent ### Web Browsers #### firefox #### chromium #### midori ## Multimedia ### Audio #### MPD #### moc ### Video #### mplayer ### Image Viewers #### xfe #### xfi ## Documents ### Editors #### vim ### Document Readers #### zathura #### apvlv #### mupdf ### Office Suites #### wps-office 参考： https://wiki.gentoo.org/wiki/Rxvt-unicode https://wiki.archlinux.org/index.php/Rxvt-unicode","tags":"Gentoo","title":"Gentoo/Arch常用软件列表"},{"url":"http://wonux.github.io/gentoo-file-encode","text":"Linux与Windows系统语言编码区别 在Linux操作系统下，我们有时打开在windows下的txt文件，发现在windows下能正常显示的txt文件出现了中文乱码。 出现这种情况的原因为两种操作系统的中文字符编码方式（压缩方式）不同，在windows环境中中文字符编码一般为gbk，而在linux环境中为utf8，这就导致了在windows下能正常显示txt文件在linux环境下打开呈现了乱码状态。 系统编码设置 locale.gen 文件 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # /etc/locale.gen: list all of the locales you want to have on your system # # The format of each line: # <locale> <charmap> # # Where <locale> is a locale located in /usr/share/i18n/locales/ and # where <charmap> is a charmap located in /usr/share/i18n/charmaps/. # # All blank lines and lines starting with # are ignored. # # For the default list of supported combinations, see the file: # /usr/share/i18n/SUPPORTED # # Whenever glibc is emerged, the locales listed here will be automatically # rebuilt for you. After updating this file, you can simply run `locale-gen` # yourself instead of re-emerging glibc. en_US.UTF-8 UTF-8 zh_CN.UTF-8 UTF-8 查看系统语言编码种类 /usr/share/i18n/locales/ 目录下包含系统支持的编码语言种类 1 2 3 4 5 gentoo ~ # ls /usr/share/i18n/locales/ en_US en_GB en_HK zh_CN zh_TW zh_HK ja_JP de_DE ...... gentoo ~ # 查看字符编码压缩方式 /usr/share/i18n/charmaps/ 目录下包含系统支持的字符编码方式 1 2 3 4 5 6 7 8 9 10 11 ls /usr/share/i18n/charmaps/ ANSI_X3.110-1983.gz IBM1026.gz ISO-8859-16.gz ANSI_X3.4-1968.gz IBM1047.gz ISO_8859-1,GL.gz ARMSCII-8.gz IBM1124.gz ISO-8859-1.gz ASMO_449.gz IBM1129.gz ISO-8859-2.gz GB18030.gz ISIRI-3342.gz SAMI.gz GB_1988-80.gz ISO_10367-BOX.gz SAMI-WS2.gz GB2312.gz ISO_10646.gz SEN_850200_B.gz GBK.gz ISO_11548-1.gz SEN_850200_C. HP-ROMAN9.gz ISO_6937.gz UTF-8.gz ...... enca 查看文件编码方式 1 enca -L zh_CN file ###检查文件的编码 解决方案 iconv编码转换 使用 iconv 命令进行文件编码转换，如乱码文件名为hello.txt，那么在终端输入如下命令： 1 iconv -f gbk -t utf8 hello.txt > hello.utf8.txt #### enca编码转换 使用 enca 命令转换: 1 2 enca -L zh_CN -x UTF-8 hello.utf8.txt ###将文件编码转换为\"UTF-8\"编码 enca -L zh_CN -x gbk hello.txt ###将文件编码转换为\"gbk\"编码 enca 有一个好处,如果文件本来就是你要转换的那种编码，它不会报错，还是会print出结果来， 而\"iconv\"则会报错。","tags":"Gentoo","title":"Gentoo解决windows txt文件中文乱码问题 — 文件编码介绍"},{"url":"http://wonux.github.io/gentoo-dual-network","text":"引言：本文配置网络通过 OpenRC/netifrc 方法（net.*scritps）配置。 外网网卡：enp3s4 内网网卡：enp2s0 - 外网地址（通过路由器） IP ： 192.168.1.10 掩码： 255.255.255.0 网关： 192.168.1.1 - 内网地址 IP ： 172.14.255.27 掩码： 255.255.0.0 网关： 172.14.0.1 1、分别设置网卡 IP ，默认网关设置外网网关。 编辑 /etc/conf.d/net 文件 1 2 3 config_enp3s4=\"192.168.1.10/24\" routes_enp3s4=\"default via 192.168.1.1\" config_enp2s0=\"172.14.255.27/16\"","tags":"Gentoo","title":"Gentoo双网卡同时启用上内外网"},{"url":"http://wonux.github.io/gentoo-network-method","text":"OpenRC/netifrc Netifrc is a collection of modules created to configure and manage network interfaces via individual, per-interface scripts located in the /etc/init.d/ directory. Enable Gentoo's network stack ( net.* scripts ). 检测网卡名字 1 2 3 ifconfig -a or ls /sys/class/net 添加网卡 通过 net.lo 链接 1 2 3 ln -s /etc/init.d/net.lo /etc/init.d/net.ifname /etc/init.d/net.ifname start rc-update add net.ifname default 配置网络 IP 编辑 /etc/conf.d/net 文件 1 2 config_ifname=\"192.168.1.10/24\" #ip、掩码 routes_ifname=\"default via 192.168.1.1\" #网关 添加 DNS 编辑`/etc/resolv.conf文件 1 2 nameserver 202.99.166.4 nameserver 202.99.160.68 Newnet enable the new network stack (experimental) DHCPCD D ynamic H ost C onfiguration P rotocol C lient D aemon ( DHCPCD ) is a popular DHCP client for Gentoo Linux users. 使用dhcpcd自动获取 IP ，需要将net.*scripts标本停用，并设置 /etc/conf.d/net 中 config_ifname=\"dhcp\" 或留空。 dhcpcd-ui https://wiki.gentoo.org/wiki/Dhcpcd-ui#Usage - dhcpcd-gtk NetworkManager NetworkManager is a network management software for Ethernet, Wifi, DSL , dialup, VPN , WiMAX and mobile broadband network connections. It's a good idea to use dhclient from net-misc/dhcp instead of net-misc/dhcpcd . NetworkManager GUI GTK : gnome-extra/nm-applet KDE Frontend: kde-misc/plasma-nm kde-misc/networkmanagement 参考： Network management Network_management_using_DHCPCD/OpenRC_message Netifrc Network management using DHCPCD NetworkManager","tags":"Gentoo","title":"Gentoo网络管理方法总结"},{"url":"http://wonux.github.io/gentoo-wpa-supplicant","text":"安装 安装 net-wireless/wpa_supplicant 包 1 emerge --ask wpa_supplicant 启动网络 为wpa_supplicant添加无线接口 在 wpa_supplicant.conf 文件中添加 1 ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=wheel 初始化wpa_supplicant环境 1 wpa_supplicant -d -Dnl80211 -iwlan0 -c /etc/wpa_supplicant/wpa_supplicant.conf 参数： 1 2 3 4 5 -B - Fork into background. -c filename - Path to configuration file. -d increase debugging verbosity -i interface - Interface to listen on. -D driver - Optionally specify the driver to be used. For a list of supported drivers see the output of wpa_supplicant -h . nl80211 is the current standard, but not all wireless chip's modules support it. wext is currently deprecated, but still widely supported. 查看wpa_supplicant进程 1 2 3 ps -aux | grep wpa root 1841 0.0 0.2 6168 2920 ? Ss 09:10 0:00 wpa_supplicant -B -c/etc/wpa_supplicant/wpa_supplicant.conf -iwlan0 root 2122 0.0 0.0 2780 728 pts/0 S+ 09:25 0:00 grep --colour=auto wpa 配置 Set for Gentoo net.* scrips，tell the network script to use wpa_supplicant. File/etc/conf.d/net 1 2 3 4 modules_wlan0 = \"wpa_supplicant\" # 因为wpa_supplicant还不能很好的自动侦测驱动，所以需要我们为其指定正在使用的驱动。 wpa_supplicant_wlan0 = \"-Dnl80211\" config_wlan0 = \"dhcp\" Set for dhcpcd,no special setup is needed.Do not add wpa_supplicant to any runlevel. It will be controlled by dhcpcd. 配置文件 /etc/wpa_supplicant/wpa_supplicant.conf 1 2 3 4 5 6 7 8 9 10 11 12 13 # Allow users in the 'wheel' group to control wpa_supplicant ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=wheel # Make this file writable for wpa_gui update_config=1 #自动扫描AP（也就是可以上的无线网络热点） ap_scan=1 # 简单的情形：WPA-PSk密码验证方式，PSK是ASCII密码短语，所有合法的加密方式都允许连接 network={ ssid=\"simple\" psk=\"very secret passphrase\" # 优先级越高，就能越早匹配到。 priority=5 } To allow unprivileged users to control the connection using wpa_gui / wpa_cli, make sure GROUP=wheel and update_config=1 . 也可以使用 wpa_passphrase 命令添加无线热点 1 wpa_passphrase [ ssid ] [ passphrase ] >> /etc/wpa_supplicant/wpa_supplicant.conf 上面这条命令可以自动生成一段配置，我们将它输出添加到 wpa_supplicant 的默认配置文件里面。 wpa_cli 运行wpa_cli时可能会出现如下的错误： Could not connect to wpa_supplicant - re-trying 这个错误可能是因为你的wpa_supplicant进程没有启动起来造成的。 1 2 3 4 5 6 7 8 9 10 11 wpa_cli > scan > scan_results > add_network 0 > set_network 0 ssid \"MYSSID\" > set_network 0 psk \"passphrase\" > enable_network 0 > save_config OK dhcpcd interface 设置、获取 IP 自动获取 1 dhcpcd wlan0 手动设置 1 ifconfig wlan0 192.168.1.11 broadcast 192.168.1.255 netmask 255.255.255.0 告知Gentoo RC 系统网卡名字 1 2 3 4 5 6 7 cd /etc/init.d ln -s net.lo net.wlan0 #start and stop it using the following commands: /etc/init.d/net.eth0 start /etc/init.d/net.eth0 stop #开机启动 rc-update add wlan0 default","tags":"Gentoo","title":"Gentoo无线网络配置 — wpa_supplicant"},{"url":"http://wonux.github.io/gentoo-locale","text":"locale是什么？ 一份Locale是一组信息的集合，大多数程序利用它来确定特定的国家和语言设置。这些locale以及它们包含的数据是系统库的一部分，可以在大多数系统中的/usr/share/locale目录下找到。locale的名称通常命名为ab_CD的形式，其中ab是两个（或三个）字母的语言代号（在 ISO -639中指定）， CD 是两个字母的国家代号（在 ISO -3166中指定）。一些变量常常附加在locale名称的后面，例如en_GB. UTF -8或de_DE@euro。 locale环境变量 Locale的设置保存在环境变量中。典型情况下设置在 /etc/env.d/02locale （系统全局设置）和 ~/.bashrc （特定用户设置）文件中。这些变量分别决定locale各方面的设置，下面的表格给出了具体说明。所有变量都会取一个前述ab_CD格式的locale名称作为值。 locale把按照所涉及到的文化传统的各个方面分成12个大类，这12个大类分别是： 1 2 3 4 5 6 7 8 9 10 11 12 语言符号及其分类(LC_CTYPE) 数字(LC_NUMERIC) 比较和排序习惯(LC_COLLATE) 时间显示格式(LC_TIME) 货币单位(LC_MONETARY) 信息主要是提示信息,错误信息, 状态信息, 标题, 标签, 按钮和菜单等(LC_MESSAGES) 姓名书写方式(LC_NAME) 地址书写方式(LC_ADDRESS) 电话号码书写方式(LC_TELEPHONE) 度量衡表达方式(LC_MEASUREMENT) 默认纸张尺寸大小(LC_PAPER) 对locale自身包含信息的概述(LC_IDENTIFICATION)。 其中，与中文输入关系最密切的就是 LC_CTYPE,LC_CTYPE 规定了系统内有效的字符以及这些字符的分类，诸如什么是大写字母，小写字母，大小写转换，标点符号、可打印字符和其他的字符属性等方面。而locale定义zh_CN中最最重要的一项就是定义了汉字(Class \"hanzi\")这一个大类，当然也是用Unicode描述的，这就让中文字符在Linux系统中成为合法的有效字符，而且不论它们是用什么字符集编码的。 在en_US的locale定义中，并没有定义汉字，所以汉字不是有效字符。所以如果要输入中文必须使用支持中文的locale，也就是zh_XX，如zh_CN，zh_TW，zh_HK等等。 另外非常重要的一点就是这些分类是彼此独立的，也就是说LC_CTYPE，LC_COLLATE和 LC_MESSAGES等等分类彼此之间是独立的，可以根据用户的需要设定成不同的值。这一点对很多用户是有利的，甚至是必须的。例如，我就需要一个能够输入中文的英文环境，所以我可以把LC_CTYPE设定成。 怎样设定locale呢？ 设定locale就是设定12大类的locale分类属性，即 12个 LC_* 。除了这12个变量可以设定以外，为了简便起见，还有两个变量： LC_ALL 和 LANG 。它们之间有一个优先级的关系： LC_ALL > LC_* > LANG 可以这么说，LC_ALL是最上级设定或者强制设定，而 LANG 是默认设定值。 1 2 3 4 1.如果你设定了LC_ALL＝zh_CN.UTF-8，那么不管LC_*和LANG设定成什么值，它们都会被强制服从LC_ALL的设定，成为 zh_CN.UTF-8。 2.假如你设定了LANG＝zh_CN.UTF-8，而其他的LC_*=en_US.UTF-8，并且没有设定LC_ALL的话，那么系统的locale设定以LC_*=en_US.UTF-8。 3.假如你设定了LANG＝zh_CN.UTF-8，而其他的LC_*，和LC_ALL均未设定的话，系统会将LC_*设定成默认值，也就是LANG的值 zh_CN.UTF-8 。 4.假如你设定了LANG＝zh_CN.UTF-8，而其他的LC_CTYPE=en_US.UTF-8，其他的LC_*，和LC_ALL均未设定的话，那么系统的locale设定将是：LC_CTYPE=en_US.UTF-8，其余的 LC_COLLATE，LC_MESSAGES等等均会采用默认值，也就是LANG的值，也就是LC_COLLATE＝LC_MESSAGES＝……＝ LC_PAPER＝LANG＝zh_CN.UTF-8。 所以，locale是这样设定的： 1 2 3 4 1.如果你需要一个纯中文的系统的话，设定LC_ALL= zh_CN.XXXX，或者LANG= zh_CN.XXXX都可以，当然你可以两个都设定，但正如上面所讲，LC_ALL的值将复盖所有其他的locale设定，不要作无用功。 2.如果你只想要一个可以输入中文的环境，而保持菜单、标题，系统信息等等为英文界面，那么只需要设定LC_CTYPE＝zh_CN.XXXX，LANG= en_US.XXXX就可以了。这样LC_CTYPE＝zh_CN.XXXX，而LC_COLLATE＝LC_MESSAGES＝……＝ LC_PAPER＝LANG＝en_US.XXXX。 3.假如你高兴的话，可以把12个LC_*一一设定成你需要的值，打造一个古灵精怪的系统：LC_CTYPE＝zh_CN.GBK/GBK(使用中文编码内码GBK字符集)；LC_NUMERIC=en_GB.ISO-8859-1(使用大不列颠的数字系统)LC_MEASUREMEN=de_DE.ISO-8859-15@euro(德国的度量衡使用ISO-8859-15字符集)罗马的地址书写方式，美国的纸张设定……。估计没人这么干吧。 4.假如你什么也不做的话，也就是LC_ALL，LANG和LC_*均不指定特定值的话，系统将采用POSIX作为lcoale， 警告: LC_ALL设置之后不可被覆写，因此强烈反对使用。除非作测试请不要使用它，并且决不要把它设置在启动文件中。","tags":"Gentoo","title":"Gentoo本地化中文设置—Locale系统介绍"},{"url":"http://wonux.github.io/gentoo-grub-theme","text":"设置Gentoo Grub启动主题 拷贝官方LiveDVD grub主题： 下载官方 DVD ，找到 /boot/grub/themes/GenGrub目录，并拷贝出来。 安装GenGrub主题： 将GenGrub主题拷贝到系统的 /boot/grub/themes目录，并编辑grub配置文件： 1 nano -w /etc/default/grub 将主题路径设置成/boot/grub/themes/GenGrub/theme.txt 更新grub配置文件（grub2）： 1 grub2-mkconfig -o /boot/grub/grub.cfg 系统自动检测存在的操作系统和主题。 OK ，重启系统","tags":"Gentoo","title":"Gentoo启动菜单设置：使用官方LiveDVD Grub主题"},{"url":"http://wonux.github.io/gentoo-preserved-libs","text":"问题描述 1 2 3 4 5 6 7 8 9 10 11 !!! existing preserved libs: >>> package: media-libs/libmng-2.0.2-r1 * - /usr/lib/libmng.so.1 * - /usr/lib/libmng.so.1.0.0 * used by /opt/kingsoft/wps-office/office6/qt/plugins/imageformats/libqmng.so (app-office/wps-office-9.1.0.4751_alpha15) >>> package: media-libs/lcms-1.19-r2 * - /usr/lib/liblcms.so.1 * - /usr/lib/liblcms.so.1.0.19 * used by /usr/lib/libmng.so.1 (preserved) * used by /usr/lib/libmng.so.1.0.0 (preserved) Use emerge @preserved-rebuild to rebuild packages using these libraries 解决方法 折腾过程： emerge @preserved-rebuild 不起作用。 重装wps-office，再@preserved-rebuild，不起作用。 重装media-libs/libmng、package: media-libs/lcms不起作用。 1 2 3 4 emerge media-libs/libmng emerge media-libs/lcms emerge --depclean revdep-rebuild 4.卸载wps-office（一直无法解决，想卸载暂时放弃使用），preserved libs提示消失： 1 2 3 emerge -C wps-office emerge --depclean emerge @preserved-rebuild 5.第二天安装wps-office，成功无preserved libs提示。 总结 先卸载引起preserved libs的软件包（记得—depclean） @preserved-rebuild 重新安装软件","tags":"Gentoo","title":"Gentoo !!! existing preserved libs问题"},{"url":"http://wonux.github.io/gentoo-ntfs","text":"内核需要开启的选项 1 2 File systems ---> <*> FUSE (Filesystem in Userspace) support 使用 NTFS -3G NTFS -3G是一个由Tuxera公司开发并维护的开源项目，目的是为Linux提供 NTFS 分区的的驱动程序。它可以安全且快速地读写 Windows 系统的 NTFS 分区，而不用担心数据丢失。 安装软件包： 1 emerge -pv sys-fs/ntfs3g 临时挂载 NTFS 分区 可以使用下面的命令以读写方式临时装载一个 NTFS 分区到装载点 1 mount -t ntfs-3g <NTFS Partition> <Mount Point> 系统启动时挂载 NTFS 分区 编辑 /etc/fstab 1 vi /etc/fstab 在文件最后增加如下格式的行 ntfs-3g defaults 0 0 保存文件后重启系统或简单的执行下面的命令，即可装载 NTFS 分区到指定的装载点 1 mount -a","tags":"Gentoo","title":"Gentoo挂载Windowntfs的 NTFS 分区"},{"url":"http://wonux.github.io/gentoo-network","text":"网卡识别配置 要开始配置你的网卡，你首先需要告诉Gentoo RC 系统你的网卡。 可以用ifconfig命令查看自己网卡名字： 1 ifconfig -a 网卡名字（如eth0）的识别是通过在/etc/init.d目录里建立一个指向net.lo的符号链接来实现。 1 2 cd /etc/init.d ln -s net.lo net.eth0 启动和停止网络脚本 1 2 3 /etc/init.d/net.eth0 start /etc/init.d/net.eth0 stop rc-update add net.eth0 default #设置开机启动eth0 网络配置 命令方式（临时配置，重启后失效）： 设置网络包括了三个步骤： 使用ifconfig配置ip地址： 1 ifconfig eth0 192.168.1.10 broadcast 192.168.1.255 netmask 255.255.255.0 up 使用route来设定路由的网关： 1 route add default gw 192.168.1.1 创建/etc/resolv.conf配置 DNS ： 1 nano -w /etc/resolv.conf nameserver $202.99.166.4 nameserver $202.99.160.68 配置文件方式： 编辑网络配置文件/etc/conf.d/net和/etc/resolv.conf。 编辑/etc/conf.d/net配置主机 IP 地址、子网掩码和网关: 1 nano -w /etc/conf.d/net 使用 CIDR 形式表示的静态 IP ： 1 2 config_eth0=\"192.168.1.7/24\" routes_eth0=\"default via 192.168.1.1\" 使用netmask形式表示的静态 IP 1 2 config_eth0=\"192.168.1.7 broadcast 192.168.1.255 netmask 255.255.255.0\" routes_eth0=\"default via 192.168.1.1\" 注意: 如果你没有指定， DHCP 是默认选项。 测试： 测试是否能ping的通网关： 1 ping 192.168.1.1 如果能ping通，ip设置没错误。 测试 DNS ： 编辑/etc/resolv.conf配置 DNS ： 1 nano /etc/resolv.conf 在其中加入以下两行内容： 1 2 nameserver 202.99.160.68 nameserver 202.99.166.4 测试 DNS 解析是否正常： 1 ping www.baidu.com 如果能ping通， DNS 设置无误。","tags":"Gentoo","title":"Gentoo网络配置"},{"url":"http://wonux.github.io/gentoo-use","text":"Gentoo/Funtoo USE 标记 USE 的简单理解如下：一个软件不只包含软件本身，还包括其组件，如，文档，插件， GUI 支持等。 USE 就是用来标记是否要安装软件的同时安装这些组件。 声明 USE 标记 所有 USE 标记都声明在 USE 变量里面。 默认的 USE 设定，在make.defaults文件（你的profile的一部分）里声明。 全局 USE 标记 不要通过修改make.defaults文件里的 USE 变量来满足你的需要：在升级Portage的时候，这个文件将会被破坏（被覆盖）。 要改变这个默认设置，你需要在 USE 变量里添加或移去关键字。这是通过在 /etc/make.conf 里定义 USE 全局变量来实现的。 全局 USE 标记适用范围是整个系统，保存在 /etc/portage/make.conf 文件中。 比如，如果使用 GNOME 而不想使用 KDE ，就希望所有软件都要默认支持 GNOME ， KDE 的支持就不要装，那么写上 USE ＝\"gnome -kde\"。前面加 - 表示移除。 当前可用的全局 USE 标记列表可以在网上或者本机的/usr/portage/profiles/use.desc文件里找到。 局部 USE 标记 局部 USE 标记只被单个包用来做该包特有的决定，保存在 /etc/portage/package.use 中。 比如，某个软件需要安装帮助文档，加上doc。 当前可用的局部 USE 标记列表可以在网上或本机的/usr/portage/profiles/use.local.desc 文件里找到。 临时 USE 标记 仅仅把 USE 变量声明成一个 环境变量 设定临时 USE 。比如，在安装 xxx 的时候不要装 jj 就声明： USE ＝ \"-jj\" emerge xxx USE 标记优先级 USE 标记这么多地方可以定义，有的加有的减，听谁的，需要有优先级来判断。 USE 优先级顺序如下（由低到高）： make.defaults（这个文件不要去修改）里面的 USE 默认设定 < 用户在/etc/make.conf里面的 USE 设定 < 用户在/etc/portage/package.use里面的 USE 设定 < 作为环境变量的 USE 设定 USE 标记颜色 emerge命令显示时，不同 颜色 USE 标记的意义: 红色 代表这次emerge用到的 USE 标记 黄色 表示从上次更新后该标记被增加、删除或者Masked 蓝色 前面带-表示这次emerge屏蔽掉的 USE 标记 绿色 的是你本次编译添加的新 USE 标记，或者去掉的 USE 标记。 包特有的 USE 标记 查看特定包可用 USE 标记 1 emerge -pv xxx 系统上应用新的 USE 标记 如果你已经修改了你的 USE 标记，而且你想用新 USE 标记更新你的系统，可以使用emerge 的 --newuse 。 1 emerge --update --deep --newuse world （重新构建你的系统） 参考： http://en.gentoo-wiki.com/wiki/Portage http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part=2&chap=1 http://www.gentoo.org/dyn/use-index.xml","tags":"Gentoo","title":"Gentoo/Funtoo USE 标记介绍"},{"url":"http://wonux.github.io/gentoo-xorg-failed","text":"错误描述： 安装完xorg-server后，startx启动桌面环境，出现缺少模块错误。 Xorg:Failed to load module \"……\" 查看log： 1 cat /var/log/Xorg.0.log | grep EE [75.403] ( EE ) Failed to load module \"modesetting\" (module does not exist, 0) [75.403] ( EE ) Failed to load module \"fbdev\" (module does not exist, 0) [75.403] ( EE ) Failed to load module \"vesa\" (module does not exist, 0) 解决方法： 查看xorg-drivers中INPUT_DEVICES和VIDEO_CARDS变量,在make.conf中添加缺失的标记。 1 emerge -pv xorg-drivers These are the packages that would be merged, in order: Calculating dependencies … done! [ebuild R ] x11-base/xorg-drivers-1.15 INPUT_DEVICES=\"evdev keyboard mouse -acecad -aiptek -elographics -fpit -hyperpen -joystick -mutouch -penmount -synaptics -tslib -vmmouse -void -wacom\" VIDEO_CARDS=\"intel -apm -ast -chips -cirrus -dummy -epson -fbdev -fglrx (-freedreno) -geode -glint -i128 -i740 -mach64 -mga -modesetting -neomagic -nouveau -nv -nvidia (-omap) (-omapfb) -qxl -r128 -radeon -radeonsi -rendition -s3virge -savage -siliconmotion -sisusb (-sunbw2) (-suncg14) (-suncg3) (-suncg6) (-sunffb) (-sunleo) (-suntcx) -tdfx -tga -trident -tseng -v4l -vesa -via -virtualbox -vmware (-voodoo)\" 0 kB 在VIDEO_CARDS中添加modesetting,fbdev,vesa即可。","tags":"Gentoo","title":"Gentoo Xorg:Failed to load module \"……\" 问题"},{"url":"http://wonux.github.io/gentoo-gcc-invalid","text":"错误描述 Gentoo软件安装错误,提示： gcc-config: Active gcc profile is invalid 解决方法： 列出可用的profile 1 gcc-config -l gcc-config: Active gcc profile is invalid! [1] i686-pc-linux-gnu-4.6.3 显示当前使用的profile 1 gcc-config -c gcc-config: Active gcc profile is invalid! [1] i686-pc-linux-gnu-4.6.3 设置profile 1 gcc-config i686-pc-linux-gnu-4.6.3 Switching native-compiler to i686-pc-linux-gnu-4.6.3 … Regenerating /etc/ld.so.cache… [ ok ]","tags":"Gentoo","title":"gcc-config:Active gcc profile is invalid 解决办法"},{"url":"http://wonux.github.io/gentoo-localization","text":"时区 你需要选择时区让系统知道你的地理位置，以保持正确的时间。在/usr/share/zoneinfo中查找你的时区。然后在/etc/conf.d/clock中设置时区。请忽略/usr/share/zoneinfo/Etc/ GMT *时区，因为它们的名字并不表示所指的地区。比如， GMT -8实际上是 GMT +8。 设置时区信息： 1 2 3 ls /usr/share/zoneinfo echo \"Asia/Shanghai\" > /etc/timezone emerge --config sys-libs/timezone-data 注意: 你可以做一个用户级的设置，在shell的rc文件（如bash的.bash_profile）中将 TZ 变量的值设为/usr/share/zoneinfo下的任何东西。本案例中 TZ =\"Asia/Shanghai\"。 硬件时钟 Gentoo Linux安装过程中，大多数情况下硬件时钟都是被设成 UTC （或 GMT ，格林威治标准时间），而时区则定为实际的本地时间。如果出于某种原因，你需要将硬件时钟设为非 UTC ，那么你就要编辑/etc/conf.d/hwclock，将 CLOCK 的值由 UTC 改为local。 1 2 3 CLOCK=\"UTC\" 或 CLOCK=\"local\" 安装中文字体 推荐开源文泉驿自由字体 1 2 emerge wqy-zenhei （文泉驿正黑） emerge wqy-microhei （文泉驿微米黑） 生成指定的Locale 可能你在系统中只要用到一个或者两个locale。你可以在/etc/locale.gen中指定所需的的locale。 中文有很多种编码，最流行的就是 UTF8 和 GBK 。我们推荐客户使用 UTF8 编码，因为这是国际标准，能兼容任何语言的编码。 添加locale到 /etc/locale.gen 1 nano -w /etc/locale.gen en_US ISO -8859-1 en_US. UTF -8 UTF -8 zh_CB. UTF -8 UTF -8 下一步是执行 locale-gen 。它会生成/etc/locale.gen文件中指定的所有locale。 1 locale-gen 你可以通过执行locale -a来检验所选的locale是否可用。 1 locale -a 设置一个Locale显示中文 在 /etc/env.d/02locale 中设置全局默认的系统locale LANG =\"zh_CN. UTF -8\" LC_COLLATE=\"C\" 在~/.bashrc中设置用户级的系统locale export LANG =\"zh_CN. UTF -8\" export LC_COLLATE=\"C\" 更新系统全局默认的locale： 设置好正确的locale后，一定要更新环境变量使系统知道所做的更改： 1 env-update && source /etc/profile 更新特定用户的locale： 1 source ~/.bashrc 更新环境后，你需要按下Ctrl-Alt-Backspace杀死X服务器，登出，然后以用户身份登入。 现在，检验一下所做的更改是否已经生效了： 1 locale 注： 另一种系统配置方式是保留默认的C locale，同时要能够表现 UTF -8字符。 这种选择可以通过使用下述设置来实现：LC_CTYPE=zh_CN. UTF -8","tags":"Gentoo","title":"Gentoo本地化设置—时区、时钟、字体、中文环境"},{"url":"http://wonux.github.io/gentoo-udev-netware","text":"问题描述： 配置网络时，很多新手运行ifconfig命令查看网卡时，会发现我们熟悉的eth0网卡没有了，或是发现一些不规则命名的东东，不错，那就是你的网卡。 因为内核升级（忘记具体哪个版本了）从udev-197将自动分配更好的接口,网卡的命名改变了。 参考资料： http://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames 从开机信息中可以看到提示： 1 dmesg |grep network [ 74.261872] systemd-udevd[14259]: renamed network interface wlan0 to wlp2s0 [ 74.391865] systemd-udevd[14259]: renamed network interface eth0 to enp0s4 解决方法： 使用老的命名方式（eth×）： 使用原来的网卡名字eth0,重置udev的rules： 方法一： 在kernel命令行选项里使用net.ifnames=0 方法二：新建空文件文件/etc/udev/rules.d/80-net-name-slot.rules或注释掉里面内容 1 2 3 ln -s /dev/null /etc/udev/rules.d/80-net-name-slot.rules 或 touch /etc/udev/rules.d/80-net-name-slot.rules 使用新的网卡名字： 1 2 3 4 5 6 rm /etc/udev/rules.d/80-net-name-slot.rules rm /etc/init.d/net.eth0 #删除不存在的引用 rc-update delete net.eth0 default #删除不存在的开机启动 cd /etc/init.d ln -s net.lo net.enp0s3 rc-update add net.enp0s3 default #使用新名字","tags":"Gentoo","title":"Gentoo解决Udev升级的网卡重命名问题"},{"url":"http://wonux.github.io/gentoo-handbook-clock","text":"升级后的gentoo不再使用/etc/conf.d/clock，而是使用/etc/conf.d/hwclock来设置和时间相关了。 在/etc/conf.d/hwclock文件中设置系统时间为本地时间而不是 UTC 时间: 1 clock=\"local\" #default: UTC 然后用date命令设置正确的系统时间，格式如下： 1 date [MMDDhhmm[YY][.ss］ 其他的不用解释了，其中的 YY 表示年份的前２位数。 然后再把系统时间同步到硬件时间就可以了： 1 hwclock --systohc 使用hwclock命令也可以把硬件时间同步到系统时间： 1 hwclock --hctosys 显示硬件时间则是： 1 hwclock --show","tags":"Gentoo","title":"Gentoo解决Windows双系统时间不同步的问题"},{"url":"http://wonux.github.io/gentoo-handbook-alsa","text":"硬件检测 To choose the right driver, first detect the used audio controller. You can use lspci for this task: 1 lspci | grep -i audio 内核配置 You need to activate the following kernel options: 1 2 3 4 5 6 7 8 9 10 11 12 13 Device Drivers ---> Sound ---> <*> Sound card Support <*> Advanced Linux Sound Architecture ---> [*] PCI sound devices ---> Select the driver for your audio controller, e.g.: <*> Intel HD Audio ---> (snd-hda-intel) Select a codec or enable all and let the generic parse choose the right one: [*] Build Realtek HD-audio codec support [*] ... [*] Build Silicon Labs 3054 HD-modem codec support [*] Enable generic HD-audio codec parser 软件 You also want to install media-sound/alsa-utils, if it isn't already pulled in: 1 emerge --ask alsa-utils 配置 权限 Add the user you want to be able to access the sound card to the audio group: 1 gpasswd -a larry audio 服务 You can now start ALSA : 1 /etc/init.d/alsasound start To start ALSA at boot time, add it your boot runlevel: 1 rc-update add alsasound boot Mixer调节音量，取消静音 If you can't hear anything, the output channels may be muted. Unmute the channels with your desktop environment's mixer or with alsamixer by selecting the appropriate channels and hitting the m key to mute or unmute: 1 alsamixer 测试声音 If everything above is perfect, you should now be able to test your sound card and your speakers. We will use the speaker-test command line tool from package media-sound/alsa-utils (this should already be installed as per our previous recommendation). 1 speaker-test -t wav -c 2","tags":"Gentoo","title":"Gentoo安装详解（五）—声卡设置"},{"url":"http://wonux.github.io/gentoo-handbook-xorg","text":"安装X桌面环境： 安装Xorg： 检测显卡信息： 1 2 dmesg | grep video lspci | grep -i VGA 配置INPUT_DEVICE、VIDEO_CARDS变量： 在安装Xorg之前，你需要在/etc/portage/make.conf文件中设置两个重要的变量。 1 2 3 4 5 6 7 8 9 10 (For mouse, keyboard, and Synaptics touchpad support) INPUT_DEVICE=\"evdev synaptics\" （对nVidia显卡） VIDEO_CARDS=\"nvidia\" （或，对ATI Radeon显卡） VIDEO_CARDS=\"radeon\" （VMware虚拟机） VIDEO_CARDS=\"vmware\" （VirtualBox虚拟机） VIDEO_CARDS=\"virtualbox\" 安装xorg-server\" 1 emerge -pv xorg-drivers First of all, make sure udev is in your USE flags: 1 echo \"x11-base/xorg-server udev\" >> /etc/portage/package.use Next, install Xorg: 1 emerge -av xorg-server 注：现在比较新的版本的Xorg（大概是 1.5 以后的吧） 使用 evdev 替换了 keyboard 和 mouse ，确保 udev 标记在安装 xorg-server 时被启用。 更新环境变量： 1 2 env-update source /etc/profile 使用startx： 安装 twm 和 xterm 之后 执行 startx 测试 X 是否正常。 测试正常之后可以删除 twm 和 xterm。 1 2 emerge -v twm xterm startx 安装桌面环境： 这里选择轻量快速的 awesome 和 openbox （严格上不算完整的桌面环境，称为wm窗口管理器）配置介绍。它们自定义性比较强，可以根据自己喜好配置成各种效果。为了兼顾部署速度，我大多数选择默认配置，只做微量调整。 awesome 安装awesome： awesome3.5.5以上版本,支持使用dmenu类似[Mod4+P]的命令补全。 1 emerge --ask awesome 配置awesome： 配置文件位于 ~/.config/awesome/rc.lua 主题文件在 /usr/share/awesome/theme/default/theme.lua 1 2 mkdir -p ~/.config/awesome/ cp /etc/xdg/awesome/rc.lua ~/.config/awesome/rc.lua 检测： 更改配置文件后可以用下面的命令检测是否正确。 1 2 awesome -k ✔ Configuration file syntax OK 使用startx启动： 编辑 ~/.xinitrc 文件 1 exec ck-launch-session dbus-launch --sh-syntax --exit-with-session awesome 常用配置 1 2 3 4 5 6 7 8 9 10 11 -- {{{ Variable definitions -- Themes define colours, icons, font and wallpapers. beautiful.init(\"/usr/share/awesome/themes/default/theme.lua\") -- This is used later as the default terminal and editor to run. terminal = \"tilda\" editor = os.getenv(\"EDITOR\") or \"nano\" editor_cmd = terminal .. \" -e \" .. editor -- Autostart awful.util.spawn_with_shell(\"fcitx &\") -- awful.util.spawn_with_shell(\"feh --bg-scale /usr/share/wallpaper/gentoo-gold.jpg\") -- }}} 音量控制： 后台启动 volumeicon & 1 emerge --ask volumeicon 设置壁纸： feh设置壁纸 feh --bg-tile /path/to/image.jpg —bg-scale —bg-center —bg-fill —bg-max 1 emerge --ask feh 除了在rc.lua中添加自启动应用命令，还可以添加 /etc/xdg/awesome/autostart 脚本。 在awesome中，terminal推荐tilda、sakura。 openbox 安装openbox： 1 emerge --ask x11-wm/openbox 配置openbox： 配置文件位于 /etc/xdg/openbox 1 2 mkdir -p ~/.config/openbox/ cp /etc/xdg/openbox/* ~/.config/openbox/ 使用startx启动： 编辑 ~/.xinitrc 文件 1 exec ck-launch-session dbus-launch --sh-syntax --exit-with-session openbox-session Autostart脚本： 1 vim ~/.config/openbox/autostart 右键菜单配置： 1、安装Gentoo特有包 x11-misc/openbox-menu ，自动生成menu，不依赖 etc/xdg/menus 文件夹下的信息。 1 2 emerge --ask x11-misc/openbox-menu openbox-menu 2、使用MenuMaker更新menu。 1 2 emerge menumaker mmaker -v OpenBox3 1 cp .config/openbox/menu.xml /etc/xdg/openbox/menu.xml 或使用-f参数覆盖 配置主题： GUI 工具obconf 1 2 emerge obconf obconf openbox去边框 Openbox 在匹配窗口的 name、class 及 role 时，可以使用通配符 * 和 ?。其中，* 用来匹配任意多个字符，而 ? 仅能匹配单个字符。例如： 1 2 3 <application name= \"*\" > <decor> no </decor> </application> 这样就去掉了所有窗口的边框。 Feh设置壁纸 Panels：tint2 配置透明效果 参考另一篇文章: openbox设置透明效果 dwm","tags":"Gentoo","title":"Gentoo安装详解（四）— 安装X桌面环境"},{"url":"http://wonux.github.io/gentoo-handbook-configure","text":"配置系统 系统信息： 文件系统信息： 创建/etc/fstab 1 nano -w /etc/fstab 网络信息： Host name, Domainname, etc 1 nano -w /etc/conf.d/hostname Configuring Network 1 nano -w /etc/conf.d/net 系统信息： Gentoo uses /etc/rc.conf to configure the services, startup, and shutdown of your system. 1 nano -w /etc/rc.conf Root Password 1 passwd Gentoo uses /etc/conf.d/hwclock to set clock options. 1 nano -w /etc/conf.d/hwclock 安装系统工具软件： 可选： PCMCIA 使用lspci查看硬件信息： 1 emerge pcmciautils System Logger： 1 2 emerge syslog-ng rc-update add syslog-ng default 可选：File Indexing： 1 emerge mlocate 可选：Remote Access： 1 rc-update add sshd default 可选： DHCP Client： 1 emerge dhcpcd 配置启动项： Using GRUB2 ： 1 2 emerge sys-boot/grub grub2-install /dev/sda Optionally, install theos-prober utility (provided through the sys-boot/os-prober package) to have GRUB2 probe for other operating systems when running thegrub2-mkconfig command. In most instances, this will enable GRUB2 to automatically detect other operating systems (Windows 7, Windows 8.1, etc.). Generating GRUB2 configuration： 1 grub2-mkconfig -o /boot/grub/grub.cfg 可选：Using GRUB Legacy： 1 emerge sys-boot/grub:0 编辑配置文件： 1 nano -w /boot/grub/grub.conf Example grub.conf： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 # 默认选择哪个列表来引导。0表示第一个， 1表示第二个，以此类推。 default 0 # 引导默认列表前等待多少秒 timeout 30 # 使用漂亮、\"臃肿\"的spalsh图像来增加一点趣味:) # 如果您没有安装显卡，请将这行注释掉 splashimage=(hd0,0)/boot/grub/splash.xpm.gz title Gentoo Linux 3.10.10 # 内核镜像（或者操作系统）所在分区 root (hd0,0) kernel /boot/kernel-3.10.10-gentoo root=/dev/sda2 title Gentoo Linux 3.10.10 (rescue) # 内核镜像（或者操作系统）所在分区 root (hd0,0) kernel /boot/kernel-3.10.10-gentoo root=/dev/sda2 init=/bin/bb # 接下来的四行只有在您与Windows系统进行双启动的情况下才需要。 # 本例中，windows系统位于/dev/sda6。 title Windows XP rootnoverify (hd0,5) makeactive chainloader +1 #win7下注释掉makeactive Setting up GRUB Legacy using grub-install: Creating /etc/mtab: 1 grep -v rootfs /proc/mounts > /etc/mtab Install GRUB Legacy: 1 grub-install --no-floppy /dev/sda 重启系统: 1 2 3 4 5 exit cd umount -l /mnt/gentoo/dev{/shm,/pts,} umount -l /mnt/gentoo{/boot,/proc,} reboot","tags":"Gentoo","title":"Gentoo安装详解（三）— 配置系统"},{"url":"http://wonux.github.io/gentoo-handbook-kernel","text":"编译内核： 安装内核源码： 选择内核：如gentoo-sources 1 2 emerge gentoo-sources ls -l /usr/src/linux 手动编译内核： 1 2 cd /usr/src/linux make menuconfig 必须启用的选项： Most information can be gathered by emerging sys-apps/pciutils which contains the lspci command: 显卡： Xorg/Configuration 声卡： ALSA 网卡：根据具体网卡芯片型号，查看wiki。 无线网卡芯片驱动查询： Linux Wireless 其他选项根据需要添加，不了解保持默认即可. 编译内核与模块： 1 make && make modules_install 拷贝内核到启动分区： 1 2 3 cp arch/x86_64/boot/bzImage /boot/kernel-3.10.10-gentoo 或 make install #使用make install This will copy the kernel image into /boot together with the System.map file and the kernel configuration file. 使用genkernel编译内核： 1 emerge genkernel 可选：复制安装光盘上的内核配置文件： 1 zcat /proc/config.gz > /usr/share/genkernel/arch/x86_64/kernel-config 编译： 1 genkernel --menuconfig all 一旦genkernel运行完成，一个包括全部模块和initrd的内核将被建立。在后面配置引导程序时我们将会用到这个内核和initrd。请记下内核和initrd的名字，因为您将在配置引导程序的时候用到他们(Grub Legacy使用)。initrd将会在启动真正的系统前自动识别硬件（如同安装光盘一样）。 1 ls /boot/kernel* /boot/initramfs*","tags":"Gentoo","title":"Gentoo安装详解（二）— 编译内核"},{"url":"http://wonux.github.io/gentoo-handbook-base","text":"前期准备 远程登录： 开启ssh服务： 1 /etc/init.d/sshd start 设置密码： 1 passwd 以便使用putty、ssh client远程登录上传stage等（有时在线下载很慢，而局域网上传很快） 准备磁盘： 分区： 1 fdisk /dev/sda /dev/sda1 : /boot 100M(32-100M) 设启动笔记-a /dev/sda2 : / 20G /dev/sda3 : /home 20G /dev/sda5 : /swap 1G (内存< 512 MB ,分区分配2倍内存大小的空间;> 1024 MB ，可以分配较少的空间甚至不需要swap 分区。)-t 82 创建文件系统： 1 2 3 4 mkfs.ext4 /dev/sda1 mkfs.ext4 /dev/sda2 mkfs.ext4 /dev/sda3 mkswap /dev/sda5 挂载分区： 1 2 3 4 5 6 mount /dev/sda2 /mnt/gentoo mkdir /mnt/gentoo/boot mount /dev/sda1 /mnt/gentoo/boot mkdir /mnt/gentoo/home mount /dev/sda3 /mnt/gentoo/home swapon /dev/sda5 安装系统 安装stage及portage： 正确设置日期／时间： 1 date 如果显示的日期／时间不正确，可以使用date MMDDhhmmYYYY命令 下载Stage3 Tarbll： 1 2 cd /mnt/gentoo links http://www.gentoo.org/main/en/mirrors.xml 选择国内速度较快的镜像，进入releases/x86/autobuilds/目录里。你将会看到所有适合你的计算机体系结构的stage文件（它们也可能放在各个独立的子体系名称的子目录里）。选择一个，然后按D来下载。下载完以后，再按Q退出浏览器。 或使用 SSH Secure Shell登录上传stage3文件 解开Stage3 Tarball： 1 tar xvjpf stage3-*.tar.bz2 下载Portage： 打开links（或者lynx）然后到我们的Gentoo镜像列表。选择一个离你最近的镜像，打开snapshots/目录。然后选择最新的Portage快照（portage-latest.tar.bz2）并按D来下载它。 1 links http://www.gentoo.org/main/en/mirrors.xml 或使用 SSH Secure Shell登录上传portage文件 解压Portage： 1 tar -xvjf /mnt/gentoo/portage-latest.tar.bz2 -C /mnt/gentoo/usr （install a Portage snapshot） 编译前准备： 配置编译选项： 1 nano -w /mnt/gentoo/etc/portage/make.conf CFLAGS =\"-march=native -O2 -pipe\" CXXFLAGS =\"${ CFLAGS }\" # 两个变量使用相同的设置 MAKEOPTS =\"-j3\" # MAKEOPTS 定义在安装软件的时候同时可以产生并行编译的数目， CPU 数目加一是个不错的选择 查看cpu信息： 1 cat proc/cpuinfo 选择镜像站点： 1 2 mirrorselect -i -o >> /mnt/gentoo/etc/portage/make.conf mirrorselect -i -r -o >> /mnt/gentoo/etc/portage/make.conf Warning: app-portage/mirrorselect has not been updated to handle modifying the target chrootsrepos.conf/gentoo.conf file yet. Also, the SYNC variable in make.conf is deprecated and no longer used by portage. This section needs to be updated, please skip for the time being… 拷贝 DNS 信息： 1 cp -L /etc/resolv.conf /mnt/gentoo/etc/ Chroot进入新系统环境： Chroot： 挂载 /proc, /dev, /sys文件系统： 1 2 3 mount -t proc none /mnt/gentoo/proc mount --rbind /dev /mnt/gentoo/dev mount --rbind /sys /mnt/gentoo/sys 进入新的系统环境： 1 2 3 chroot /mnt/gentoo /bin/bash source /etc/profile export PS1=\"(chroot) $ PS1 \" 新环境配置： 更新portage树： 1 2 3 emerge --sync （Updating the Portage tree） 或 emerge-webrsync（fetch the latest portage snapshot） 选择Profile： 1 2 eselect profile list eselect profile set × 设置时区： 1 2 3 ls /usr/share/zoneinfo echo \"Europe/Brussels\" > /etc/timezone emerge --config sys-libs/timezone-data 设置locale： 1 2 3 4 nano -w /etc/locale.gen locale-gen eselect locale list eselect locale set x 更新环境变量： 1 env-update && source /etc/profile","tags":"Gentoo","title":"Gentoo安装详解(一) — 安装基本系统"}]}